# Generated by Django 4.1.13 on 2024-04-26 03:56

import colorfield.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Marca de tiempo de la creacion de un objeto', verbose_name='Fecha de creacion')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, help_text='Marca de tiempo de la ultima modificacion de un objeto', verbose_name='Ultima modificacion')),
                ('observaciones', models.CharField(blank=True, help_text='Campo abierto para alguna descripcion u observaciones del objeto', max_length=255, verbose_name='Observaciones')),
                ('name', models.CharField(default='CONFIGURACION GENERAL', help_text='Configuracion General.', max_length=90, verbose_name='Configuracion')),
                ('dias_antiguedad_infraccion', models.PositiveIntegerField(default=90, help_text='Antiguedad valida en dias de una infraccion.', verbose_name='Antiguedad valida de una infraccion (dias)')),
            ],
            options={
                'ordering': ['fecha_creacion'],
                'get_latest_by': 'fecha_creacion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Marca de tiempo de la creacion de un objeto', verbose_name='Fecha de creacion')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, help_text='Marca de tiempo de la ultima modificacion de un objeto', verbose_name='Ultima modificacion')),
                ('observaciones', models.CharField(blank=True, help_text='Campo abierto para alguna descripcion u observaciones del objeto', max_length=255, verbose_name='Observaciones')),
                ('nombre', models.CharField(help_text='Nombre de la marca', max_length=30, unique=True, verbose_name='Nombre')),
            ],
            options={
                'ordering': ['fecha_creacion'],
                'get_latest_by': 'fecha_creacion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Marca de tiempo de la creacion de un objeto', verbose_name='Fecha de creacion')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, help_text='Marca de tiempo de la ultima modificacion de un objeto', verbose_name='Ultima modificacion')),
                ('observaciones', models.CharField(blank=True, help_text='Campo abierto para alguna descripcion u observaciones del objeto', max_length=255, verbose_name='Observaciones')),
                ('nombre', models.CharField(help_text='Nombre del propietario', max_length=50, verbose_name='Nombre')),
                ('email', models.EmailField(help_text='Correo electronico del propietario', max_length=254, unique=True, verbose_name='Correo electronico')),
            ],
            options={
                'ordering': ['fecha_creacion'],
                'get_latest_by': 'fecha_creacion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Marca de tiempo de la creacion de un objeto', verbose_name='Fecha de creacion')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, help_text='Marca de tiempo de la ultima modificacion de un objeto', verbose_name='Ultima modificacion')),
                ('observaciones', models.CharField(blank=True, help_text='Campo abierto para alguna descripcion u observaciones del objeto', max_length=255, verbose_name='Observaciones')),
                ('placa_patente', models.CharField(help_text='Placa de patente del vehiculo', max_length=10, unique=True, verbose_name='Placa patente')),
                ('color', colorfield.fields.ColorField(default='#FF0000', help_text='Color del vehiculo', image_field=None, max_length=25, samples=None, verbose_name='Color')),
                ('marca', models.ForeignKey(help_text='Marca del vehiculo', on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to='core.marca')),
                ('propietario', models.ForeignKey(help_text='Propietario del vehiculo', on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to='core.persona')),
            ],
            options={
                'ordering': ['fecha_creacion'],
                'get_latest_by': 'fecha_creacion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Oficial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Marca de tiempo de la creacion de un objeto', verbose_name='Fecha de creacion')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, help_text='Marca de tiempo de la ultima modificacion de un objeto', verbose_name='Ultima modificacion')),
                ('observaciones', models.CharField(blank=True, help_text='Campo abierto para alguna descripcion u observaciones del objeto', max_length=255, verbose_name='Observaciones')),
                ('nombre', models.CharField(help_text='Nombre del oficial', max_length=50, unique=True, verbose_name='Nombre')),
                ('nui', models.CharField(help_text='Numero unico identificatorio del oficial', max_length=10, unique=True, verbose_name='Numero unico identificatorio')),
                ('groups', models.ManyToManyField(related_name='oficiales_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='oficial_user_permissions', to='auth.permission')),
            ],
            options={
                'ordering': ['fecha_creacion'],
                'get_latest_by': 'fecha_creacion',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Infraccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Marca de tiempo de la creacion de un objeto', verbose_name='Fecha de creacion')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, help_text='Marca de tiempo de la ultima modificacion de un objeto', verbose_name='Ultima modificacion')),
                ('observaciones', models.CharField(blank=True, help_text='Campo abierto para alguna descripcion u observaciones del objeto', max_length=255, verbose_name='Observaciones')),
                ('fecha_infraccion', models.DateTimeField(help_text='Fecha de la infraccion', verbose_name='Fecha de infraccion')),
                ('oficial', models.ForeignKey(help_text='Oficial que cargo la infraccion', on_delete=django.db.models.deletion.CASCADE, to='core.oficial')),
                ('vehiculo', models.ForeignKey(help_text='Vehiculo al que se le carga una infraccion', on_delete=django.db.models.deletion.CASCADE, to='core.vehiculo')),
            ],
            options={
                'ordering': ['fecha_creacion'],
                'get_latest_by': 'fecha_creacion',
                'abstract': False,
            },
        ),
    ]
